%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

tic0 = tic;
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info
options_ = [];
M_.fname = 'sticky_wages_both';
M_.dynare_version = '6.0';
oo_.dynare_version = '6.0';
options_.dynare_version = '6.0';
%
% Some global variables initialization
%
global_initialization;
M_.exo_names = cell(2,1);
M_.exo_names_tex = cell(2,1);
M_.exo_names_long = cell(2,1);
M_.exo_names(1) = {'eps_i'};
M_.exo_names_tex(1) = {'eps\_i'};
M_.exo_names_long(1) = {'eps_i'};
M_.exo_names(2) = {'eps_a'};
M_.exo_names_tex(2) = {'eps\_a'};
M_.exo_names_long(2) = {'eps_a'};
M_.endo_names = cell(12,1);
M_.endo_names_tex = cell(12,1);
M_.endo_names_long = cell(12,1);
M_.endo_names(1) = {'pi_p'};
M_.endo_names_tex(1) = {'pi\_p'};
M_.endo_names_long(1) = {'pi_p'};
M_.endo_names(2) = {'pi_w'};
M_.endo_names_tex(2) = {'pi\_w'};
M_.endo_names_long(2) = {'pi_w'};
M_.endo_names(3) = {'y_gap'};
M_.endo_names_tex(3) = {'y\_gap'};
M_.endo_names_long(3) = {'y_gap'};
M_.endo_names(4) = {'y'};
M_.endo_names_tex(4) = {'y'};
M_.endo_names_long(4) = {'y'};
M_.endo_names(5) = {'n'};
M_.endo_names_tex(5) = {'n'};
M_.endo_names_long(5) = {'n'};
M_.endo_names(6) = {'w_gap'};
M_.endo_names_tex(6) = {'w\_gap'};
M_.endo_names_long(6) = {'w_gap'};
M_.endo_names(7) = {'w'};
M_.endo_names_tex(7) = {'w'};
M_.endo_names_long(7) = {'w'};
M_.endo_names(8) = {'w_nat'};
M_.endo_names_tex(8) = {'w\_nat'};
M_.endo_names_long(8) = {'w_nat'};
M_.endo_names(9) = {'i_ex'};
M_.endo_names_tex(9) = {'i\_ex'};
M_.endo_names_long(9) = {'i_ex'};
M_.endo_names(10) = {'r_nat'};
M_.endo_names_tex(10) = {'r\_nat'};
M_.endo_names_long(10) = {'r_nat'};
M_.endo_names(11) = {'a'};
M_.endo_names_tex(11) = {'a'};
M_.endo_names_long(11) = {'a'};
M_.endo_names(12) = {'yhat'};
M_.endo_names_tex(12) = {'yhat'};
M_.endo_names_long(12) = {'yhat'};
M_.endo_partitions = struct();
M_.param_names = cell(12,1);
M_.param_names_tex = cell(12,1);
M_.param_names_long = cell(12,1);
M_.param_names(1) = {'siggma'};
M_.param_names_tex(1) = {'siggma'};
M_.param_names_long(1) = {'siggma'};
M_.param_names(2) = {'varphi'};
M_.param_names_tex(2) = {'varphi'};
M_.param_names_long(2) = {'varphi'};
M_.param_names(3) = {'theta_p'};
M_.param_names_tex(3) = {'theta\_p'};
M_.param_names_long(3) = {'theta_p'};
M_.param_names(4) = {'betta'};
M_.param_names_tex(4) = {'betta'};
M_.param_names_long(4) = {'betta'};
M_.param_names(5) = {'alppha'};
M_.param_names_tex(5) = {'alppha'};
M_.param_names_long(5) = {'alppha'};
M_.param_names(6) = {'epsilon_p'};
M_.param_names_tex(6) = {'epsilon\_p'};
M_.param_names_long(6) = {'epsilon_p'};
M_.param_names(7) = {'epsilon_w'};
M_.param_names_tex(7) = {'epsilon\_w'};
M_.param_names_long(7) = {'epsilon_w'};
M_.param_names(8) = {'theta_w'};
M_.param_names_tex(8) = {'theta\_w'};
M_.param_names_long(8) = {'theta_w'};
M_.param_names(9) = {'rho_a'};
M_.param_names_tex(9) = {'rho\_a'};
M_.param_names_long(9) = {'rho_a'};
M_.param_names(10) = {'rho_i'};
M_.param_names_tex(10) = {'rho\_i'};
M_.param_names_long(10) = {'rho_i'};
M_.param_names(11) = {'phi_pi'};
M_.param_names_tex(11) = {'phi\_pi'};
M_.param_names_long(11) = {'phi_pi'};
M_.param_names(12) = {'phi_y'};
M_.param_names_tex(12) = {'phi\_y'};
M_.param_names_long(12) = {'phi_y'};
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 2;
M_.endo_nbr = 12;
M_.param_nbr = 12;
M_.orig_endo_nbr = 12;
M_.aux_vars = [];
M_.Sigma_e = zeros(2, 2);
M_.Correlation_matrix = eye(2, 2);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = true;
M_.det_shocks = [];
M_.surprise_shocks = [];
M_.learnt_shocks = [];
M_.learnt_endval = [];
M_.heteroskedastic_shocks.Qvalue_orig = [];
M_.heteroskedastic_shocks.Qscale_orig = [];
M_.matched_irfs = {};
M_.matched_irfs_weights = {};
options_.linear = true;
options_.block = false;
options_.bytecode = false;
options_.use_dll = false;
options_.ramsey_policy = false;
options_.discretionary_policy = false;
M_.nonzero_hessian_eqs = [];
M_.hessian_eq_zero = isempty(M_.nonzero_hessian_eqs);
M_.eq_nbr = 12;
M_.ramsey_orig_eq_nbr = 0;
M_.ramsey_orig_endo_nbr = 0;
M_.set_auxiliary_variables = exist(['./+' M_.fname '/set_auxiliary_variables.m'], 'file') == 2;
M_.epilogue_names = {};
M_.epilogue_var_list_ = {};
M_.orig_maximum_endo_lag = 1;
M_.orig_maximum_endo_lead = 1;
M_.orig_maximum_exo_lag = 0;
M_.orig_maximum_exo_lead = 0;
M_.orig_maximum_exo_det_lag = 0;
M_.orig_maximum_exo_det_lead = 0;
M_.orig_maximum_lag = 1;
M_.orig_maximum_lead = 1;
M_.orig_maximum_lag_with_diffs_expanded = 1;
M_.lead_lag_incidence = [
 0 5 17;
 0 6 18;
 0 7 19;
 0 8 0;
 0 9 0;
 1 10 0;
 0 11 0;
 2 12 0;
 3 13 0;
 0 14 0;
 4 15 0;
 0 16 0;]';
M_.nstatic = 5;
M_.nfwrd   = 3;
M_.npred   = 4;
M_.nboth   = 0;
M_.nsfwrd   = 3;
M_.nspred   = 4;
M_.ndynamic   = 7;
M_.dynamic_tmp_nbr = [5; 0; 0; 0; ];
M_.equations_tags = {
  1 , 'name' , 'pi_p' ;
  2 , 'name' , 'pi_w' ;
  3 , 'name' , 'y_gap' ;
  4 , 'name' , '4' ;
  5 , 'name' , 'y' ;
  6 , 'name' , 'w_gap' ;
  7 , 'name' , 'w_nat' ;
  8 , 'name' , '8' ;
  9 , 'name' , 'r_nat' ;
  10 , 'name' , 'i_ex' ;
  11 , 'name' , 'yhat' ;
  12 , 'name' , 'a' ;
};
M_.mapping.pi_p.eqidx = [1 3 8 10 ];
M_.mapping.pi_w.eqidx = [2 8 ];
M_.mapping.y_gap.eqidx = [1 2 3 4 ];
M_.mapping.y.eqidx = [4 5 11 ];
M_.mapping.n.eqidx = [5 ];
M_.mapping.w_gap.eqidx = [1 2 6 8 ];
M_.mapping.w.eqidx = [6 ];
M_.mapping.w_nat.eqidx = [6 7 8 ];
M_.mapping.i_ex.eqidx = [3 10 ];
M_.mapping.r_nat.eqidx = [3 9 ];
M_.mapping.a.eqidx = [4 5 7 9 12 ];
M_.mapping.yhat.eqidx = [10 11 ];
M_.mapping.eps_i.eqidx = [10 ];
M_.mapping.eps_a.eqidx = [12 ];
M_.static_and_dynamic_models_differ = false;
M_.has_external_function = false;
M_.block_structure.time_recursive = false;
M_.block_structure.block(1).Simulation_Type = 1;
M_.block_structure.block(1).endo_nbr = 3;
M_.block_structure.block(1).mfs = 3;
M_.block_structure.block(1).equation = [ 12 7 9];
M_.block_structure.block(1).variable = [ 11 8 10];
M_.block_structure.block(1).is_linear = true;
M_.block_structure.block(1).NNZDerivatives = 6;
M_.block_structure.block(1).bytecode_jacob_cols_to_sparse = [1 4 5 6 ];
M_.block_structure.block(2).Simulation_Type = 8;
M_.block_structure.block(2).endo_nbr = 7;
M_.block_structure.block(2).mfs = 6;
M_.block_structure.block(2).equation = [ 11 4 8 10 1 2 3];
M_.block_structure.block(2).variable = [ 12 4 6 9 1 2 3];
M_.block_structure.block(2).is_linear = true;
M_.block_structure.block(2).NNZDerivatives = 23;
M_.block_structure.block(2).bytecode_jacob_cols_to_sparse = [2 3 0 7 8 9 10 11 12 16 17 18 ];
M_.block_structure.block(3).Simulation_Type = 3;
M_.block_structure.block(3).endo_nbr = 1;
M_.block_structure.block(3).mfs = 1;
M_.block_structure.block(3).equation = [ 6];
M_.block_structure.block(3).variable = [ 7];
M_.block_structure.block(3).is_linear = true;
M_.block_structure.block(3).NNZDerivatives = 1;
M_.block_structure.block(3).bytecode_jacob_cols_to_sparse = [1 ];
M_.block_structure.block(4).Simulation_Type = 3;
M_.block_structure.block(4).endo_nbr = 1;
M_.block_structure.block(4).mfs = 1;
M_.block_structure.block(4).equation = [ 5];
M_.block_structure.block(4).variable = [ 5];
M_.block_structure.block(4).is_linear = true;
M_.block_structure.block(4).NNZDerivatives = 1;
M_.block_structure.block(4).bytecode_jacob_cols_to_sparse = [1 ];
M_.block_structure.block(1).g1_sparse_rowval = int32([]);
M_.block_structure.block(1).g1_sparse_colval = int32([]);
M_.block_structure.block(1).g1_sparse_colptr = int32([]);
M_.block_structure.block(2).g1_sparse_rowval = int32([2 3 1 3 2 4 5 3 6 2 3 4 2 5 1 4 5 6 4 6 5 6 ]);
M_.block_structure.block(2).g1_sparse_colval = int32([2 3 7 7 8 8 8 9 9 10 10 10 11 11 12 12 12 12 16 16 17 18 ]);
M_.block_structure.block(2).g1_sparse_colptr = int32([1 1 2 3 3 3 3 5 8 10 13 15 19 19 19 19 21 22 23 ]);
M_.block_structure.block(3).g1_sparse_rowval = int32([1 ]);
M_.block_structure.block(3).g1_sparse_colval = int32([1 ]);
M_.block_structure.block(3).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure.block(4).g1_sparse_rowval = int32([1 ]);
M_.block_structure.block(4).g1_sparse_colval = int32([1 ]);
M_.block_structure.block(4).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure.variable_reordered = [ 11 8 10 12 4 6 9 1 2 3 7 5];
M_.block_structure.equation_reordered = [ 12 7 9 11 4 8 10 1 2 3 6 5];
M_.block_structure.incidence(1).lead_lag = -1;
M_.block_structure.incidence(1).sparse_IM = [
 8 6;
 8 8;
 10 9;
 12 11;
];
M_.block_structure.incidence(2).lead_lag = 0;
M_.block_structure.incidence(2).sparse_IM = [
 1 1;
 1 3;
 1 6;
 2 2;
 2 3;
 2 6;
 3 3;
 3 9;
 3 10;
 4 3;
 4 4;
 4 11;
 5 4;
 5 5;
 5 11;
 6 6;
 6 7;
 6 8;
 7 8;
 7 11;
 8 1;
 8 2;
 8 6;
 8 8;
 9 10;
 9 11;
 10 1;
 10 9;
 10 12;
 11 4;
 11 12;
 12 11;
];
M_.block_structure.incidence(3).lead_lag = 1;
M_.block_structure.incidence(3).sparse_IM = [
 1 1;
 2 2;
 3 1;
 3 3;
];
M_.block_structure.dyn_tmp_nbr = 1;
M_.state_var = [11 8 6 9 ];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(12, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(2, 1);
M_.params = NaN(12, 1);
M_.endo_trends = struct('deflator', cell(12, 1), 'log_deflator', cell(12, 1), 'growth_factor', cell(12, 1), 'log_growth_factor', cell(12, 1));
M_.NNZDerivatives = [42; 0; -1; ];
M_.dynamic_g1_sparse_rowval = int32([8 8 10 12 1 8 10 2 8 1 2 3 4 4 5 11 5 1 2 6 8 6 6 7 8 3 10 3 9 4 5 7 9 12 10 11 1 3 2 3 10 12 ]);
M_.dynamic_g1_sparse_colval = int32([6 8 9 11 13 13 13 14 14 15 15 15 15 16 16 16 17 18 18 18 18 19 20 20 20 21 21 22 22 23 23 23 23 23 24 24 25 25 26 27 37 38 ]);
M_.dynamic_g1_sparse_colptr = int32([1 1 1 1 1 1 2 2 3 4 4 5 5 8 10 14 17 18 22 23 26 28 30 35 37 39 40 41 41 41 41 41 41 41 41 41 41 42 43 ]);
M_.dynamic_g2_sparse_indices = int32([]);
M_.lhs = {
'pi_p'; 
'pi_w'; 
'y_gap'; 
'y_gap'; 
'y'; 
'w_gap'; 
'w_nat'; 
'w_gap'; 
'r_nat'; 
'i_ex'; 
'yhat'; 
'a'; 
};
M_.static_tmp_nbr = [5; 0; 0; 0; ];
M_.block_structure_stat.block(1).Simulation_Type = 3;
M_.block_structure_stat.block(1).endo_nbr = 1;
M_.block_structure_stat.block(1).mfs = 1;
M_.block_structure_stat.block(1).equation = [ 12];
M_.block_structure_stat.block(1).variable = [ 11];
M_.block_structure_stat.block(2).Simulation_Type = 1;
M_.block_structure_stat.block(2).endo_nbr = 2;
M_.block_structure_stat.block(2).mfs = 2;
M_.block_structure_stat.block(2).equation = [ 7 9];
M_.block_structure_stat.block(2).variable = [ 8 10];
M_.block_structure_stat.block(3).Simulation_Type = 6;
M_.block_structure_stat.block(3).endo_nbr = 7;
M_.block_structure_stat.block(3).mfs = 7;
M_.block_structure_stat.block(3).equation = [ 4 1 11 2 8 3 10];
M_.block_structure_stat.block(3).variable = [ 4 6 12 3 2 1 9];
M_.block_structure_stat.block(4).Simulation_Type = 3;
M_.block_structure_stat.block(4).endo_nbr = 1;
M_.block_structure_stat.block(4).mfs = 1;
M_.block_structure_stat.block(4).equation = [ 6];
M_.block_structure_stat.block(4).variable = [ 7];
M_.block_structure_stat.block(5).Simulation_Type = 3;
M_.block_structure_stat.block(5).endo_nbr = 1;
M_.block_structure_stat.block(5).mfs = 1;
M_.block_structure_stat.block(5).equation = [ 5];
M_.block_structure_stat.block(5).variable = [ 5];
M_.block_structure_stat.variable_reordered = [ 11 8 10 4 6 12 3 2 1 9 7 5];
M_.block_structure_stat.equation_reordered = [ 12 7 9 4 1 11 2 8 3 10 6 5];
M_.block_structure_stat.incidence.sparse_IM = [
 1 1;
 1 3;
 1 6;
 2 2;
 2 3;
 2 6;
 3 1;
 3 9;
 3 10;
 4 3;
 4 4;
 4 11;
 5 4;
 5 5;
 5 11;
 6 6;
 6 7;
 6 8;
 7 8;
 7 11;
 8 1;
 8 2;
 9 10;
 9 11;
 10 1;
 10 9;
 10 12;
 11 12;
 12 11;
];
M_.block_structure_stat.tmp_nbr = 1;
M_.block_structure_stat.block(1).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(1).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(2).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(2).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(2).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(3).g1_sparse_rowval = int32([1 2 4 3 7 1 2 4 4 5 2 5 6 7 6 7 ]);
M_.block_structure_stat.block(3).g1_sparse_colval = int32([1 2 2 3 3 4 4 4 5 5 6 6 6 6 7 7 ]);
M_.block_structure_stat.block(3).g1_sparse_colptr = int32([1 2 4 6 9 11 15 17 ]);
M_.block_structure_stat.block(4).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(5).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(5).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(5).g1_sparse_colptr = int32([1 2 ]);
M_.static_g1_sparse_rowval = int32([1 3 8 10 2 8 1 2 4 4 5 5 1 2 6 6 6 7 3 10 3 9 4 5 7 9 12 10 11 ]);
M_.static_g1_sparse_colval = int32([1 1 1 1 2 2 3 3 3 4 4 5 6 6 6 7 8 8 9 9 10 10 11 11 11 11 11 12 12 ]);
M_.static_g1_sparse_colptr = int32([1 5 7 10 12 13 16 17 19 21 23 28 30 ]);
load paramvec;
M_.params(1) = paramvec(1);
siggma = M_.params(1);
M_.params(2) = paramvec(2);
varphi = M_.params(2);
M_.params(3) = paramvec(3);
theta_p = M_.params(3);
M_.params(8) = paramvec(4);
theta_w = M_.params(8);
M_.params(9) = paramvec(5);
rho_a = M_.params(9);
M_.params(10) = paramvec(6);
rho_i = M_.params(10);
M_.params(11) = paramvec(7);
phi_pi = M_.params(11);
M_.params(12) = paramvec(8);
phi_y = M_.params(12);
M_.params(6) = paramvec(9);
epsilon_p = M_.params(6);
M_.params(7) = paramvec(10);
epsilon_w = M_.params(7);
M_.params(4) = 0.99;
betta = M_.params(4);
M_.params(5) = 0.25;
alppha = M_.params(5);
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = (1)^2;
M_.Sigma_e(2, 2) = (1)^2;
options_.qz_criterium = 1+1e-6; 
steady;
oo_.dr.eigval = check(M_,options_,oo_);
options_.irf = 20;
options_.nograph = true;
options_.noprint = true;
options_.order = 1;
var_list_ = {};
[info, oo_, options_, M_] = stoch_simul(M_, options_, oo_, var_list_);
pi_p_eps_i = oo_.irfs.pi_p_eps_i';
pi_w_eps_i = oo_.irfs.pi_w_eps_i';
y_eps_i = oo_.irfs.y_eps_i';
n_eps_i = oo_.irfs.n_eps_i';
pi_p_eps_a = oo_.irfs.pi_p_eps_a';
pi_w_eps_a = oo_.irfs.pi_w_eps_a';
y_eps_a = oo_.irfs.y_eps_a';
n_eps_a = oo_.irfs.n_eps_a';
save('irfs_model.mat', 'pi_p_eps_i', 'pi_w_eps_i', 'y_eps_i', 'n_eps_i', 'pi_p_eps_a', 'pi_w_eps_a', 'y_eps_a', 'n_eps_a');


oo_.time = toc(tic0);
disp(['Total computing time : ' dynsec2hms(oo_.time) ]);
if ~exist([M_.dname filesep 'Output'],'dir')
    mkdir(M_.dname,'Output');
end
save([M_.dname filesep 'Output' filesep 'sticky_wages_both_results.mat'], 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'sticky_wages_both_results.mat'], 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'sticky_wages_both_results.mat'], 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'sticky_wages_both_results.mat'], 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'sticky_wages_both_results.mat'], 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'sticky_wages_both_results.mat'], 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'sticky_wages_both_results.mat'], 'oo_recursive_', '-append');
end
if exist('options_mom_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'sticky_wages_both_results.mat'], 'options_mom_', '-append');
end
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
